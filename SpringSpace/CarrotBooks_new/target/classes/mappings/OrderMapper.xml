<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
			
<mapper namespace="OrderMapper">
	<resultMap type="orderPageItemVO" id="orderPageItem">
		<result column="title" property="bookName"/>
		<result column="fullPrice" property="bookPrice"/>
	</resultMap>

	<resultMap type="orderItemVO" id="orderItem">
		<result column="title" property="bookName"/>
		<result column="fullPrice" property="bookPrice"/>
	</resultMap>
	
	<!-- 주문 책 정보 가져오기 -->
	<select id="getGoodsInfo" resultMap="orderPageItem">
		select bookId, title, fullPrice, discountPer, bookImage
		from book where bookId = #{bookId}
	</select>
	
	<!-- 결제 정보 가져오기 -->
	<select id="getOrderInfo" resultMap="orderItem">
		select bookId, fullPrice, discountPer
		from book where bookId = #{bookId}
	</select>

	<!-- 주문 테이블 등록 -->	
	<insert id="enrollOrder">
		insert into bOrder(orderId, addressee, memberId, memberAddr1, memberAddr2, memberAddr3, orderState, deliveryCost, usePoint)
		values(#{orderId},#{addressee}, #{memberId}, #{memberAddr1}, #{memberAddr2}, #{memberAddr3}, '배송준비', #{deliveryCost}, #{usePoint})
	</insert>
	
	<!-- 주문 상품 테이블 등록 -->
	<insert id="enrollOrderItem">
		insert into orderItem(orderItemId, orderId, bookId, bookCount, bookPrice, discountPer, savePoint)
		values(orderItemSeq.NEXTVAL, #{orderId}, #{bookId}, #{bookCount}, #{bookPrice}, #{discountPer}, #{savePoint})
	</insert>
	
	<!-- 사용자 포인트 수정 -->
	<update id="updatePoint">
		update member set memberPoint = #{memberPoint} where memberId = #{memberId}
	</update>
	
	<!-- 상품 재고 수정 -->
	<update id="updateStock">
		update book set bookStock = #{bookStock} where bookId = #{bookId}
	</update>
	
	<!-- 주문된 상품 카트 삭제 -->
	<delete id="deleteOrderCart">
		delete from cart where memberId = #{memberId} and bookId = #{bookId}
	</delete>
	
	<!-- 주문 리스트 가져오기 -->
	<select id="getOrderList" resultType="orderVO">
		<![CDATA[
			select *
			from (
				select rownum rn, o.orderId, o.memberId, o.orderstate, o.orderdate, m.memberEmail
				from border o left outer join member m on (o.memberId = m.memberId)
				where rownum <= #{pageNum} * #{amount}
		]]>
		<if test="keyword != null">
				and o.memberId like '%'||#{keyword}||'%'
		</if>
		<![CDATA[
				 order by orderdate desc
				)
			where rn > (#{pageNum} - 1) * #{amount}
		]]>
	</select>
	
	<!-- 주문 총 개수 -->
	<select id="getOrderTotal" resultType="int">
		select count(*) from border
		<if test="keyword != null">
			where memberId like '%'||#{keyword}||'%'
		</if>
	</select>
	
	<!-- 주문 취소 -->
	<update id="orderCancle">
		update border set orderState = '주문취소' where orderId = #{orderId}
	</update>
	
	<!-- 주문 상품 정보  -->
	<select id="getOrderItemInfo" resultType="orderItemVO">
		select * from orderItem
		where orderId = #{orderId}
	</select>
	
	<!-- 주문 정보 -->
	<select id="getOrder" resultType="orderVO">
		select * from border
		where orderId = #{orderId}
	</select>
</mapper>